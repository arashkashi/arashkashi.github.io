{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-new-product/add-new-product.component.ts","webpack:///src/app/add-new-product/add-new-product.component.html","webpack:///src/app/api-request.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app-top-bar/app-top-bar.component.ts","webpack:///src/app/app-top-bar/app-top-bar.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/files/files.component.ts","webpack:///src/app/files/files.component.html","webpack:///src/app/local-storage.service.ts","webpack:///src/app/login.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/main-menu/main-menu.component.ts","webpack:///src/app/main-menu/main-menu.component.html","webpack:///src/app/products/products.component.ts","webpack:///src/app/products/products.component.html","webpack:///src/app/register-new-user/register-new-user.component.ts","webpack:///src/app/register-new-user/register-new-user.component.html","webpack:///src/app/user-profile/user-profile.component.ts","webpack:///src/app/user-profile/user-profile.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddNewProductComponent","formBuilder","apiService","router","route","environment","form","group","name","required","properties","jsonValidator","control","JSON","parse","value","error","status","product","enteredName","enteredProperties","paramMap","subscribe","params","product_id","get","dispatchPostRequest","res","onFetchingProductSuccess","msg","productData","reset","navigate","stringify","onSubmit","selector","templateUrl","styleUrls","ApiRequestService","http","localStorageService","path","data","requiresAuth","token","locallyStoredToken","headers","post","api_endpoint","toPromise","formData","set","providedIn","routes","component","AppRoutingModule","forRoot","imports","AppTopBarComponent","storage","env","shouldShowMainMenuNavigation","alert","AppComponent","title","AppModule","declarations","providers","bootstrap","FilesComponent","loginServie","fileData","previewUrl","fileUploadProgress","uploadedFilePath","showSubmitButton","fileInput","target","files","preview","loggedInUserId","onAuthError","foreign_key","isPublic","mimeType","type","match","reader","FileReader","readAsDataURL","onload","_event","result","FormData","append","split","pop","fileProgress","LocalStorageService","kToken","kUserId","encryptSecretKey","encrypted","encryptData","kWeather","localStorage","setItem","getItem","decryptData","userId","encrypt","toString","bytes","decrypt","Utf8","console","log","LoginService","cookie","user","resetLocalStorage","logout","LoginComponent","loginService","loginForm","email","pattern","password","login_response","api_token","user_id","setTokenLocally","setLoggedInUserId","customerData","loginObservable","onSuccessfulLogin","onRegisterClick","MainMenuComponent","onProductsClick","onLogoutClick","ProductsComponent","api","isEditModeEnabled","onRefreshClick","products","json","Object","sort","one","two","key","push","String","onAllProducts","p","confirm","foreigh_key","foreignKey","onAddNewProductClick","onEditModeClick","RegisterNewUserComponent","registerForm","password_confirmation","UserProfileComponent","onFetchingUserSuccess","production","debug","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, ValidationErrors, Validators, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { environment } from './../../environments/environment';\nimport { ApiRequestService } from '../api-request.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-add-new-product',\n  templateUrl: './add-new-product.component.html',\n  styleUrls: ['./add-new-product.component.css']\n})\n\nexport class AddNewProductComponent implements OnInit {\n\n  form;\n  environment = environment;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiRequestService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      properties: new FormControl('', [this.jsonValidator(), Validators.required])\n    });\n  }\n  enteredName;\n  enteredProperties;\n\n  jsonValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      try {\n        JSON.parse(control.value);\n        return null;\n      } catch (error) {\n        // control.setErrors(error);\n        return {'jsonValidator': {value: control.value}};\n      }\n    };\n  }\n\n  isFormStatusValid() {\n    return this.form.status == 'INVALID'\n  }\n\n  product_id;\n\n  onFetchingProductSuccess(product) {\n    this.enteredName = product['name']\n    this.enteredProperties = product['properties']\n  }\n\n  ngOnInit(): void {\n\n    this.route.paramMap.subscribe(params => {\n      this.product_id = params.get('productId');\n        \n        this.apiService.dispatchPostRequest(\"/api/products/\" + this.product_id, {}).then(\n          res => {\n            this.onFetchingProductSuccess(res['product']);\n        },\n          msg => {})\n    });\n  }\n\n  // To convert json to string\n  // JSON.stringify(res)\n  error;\n  newUser;\n\n  onSubmit(productData) {\n    // Process checkout data here\n    this.form.reset();\n\n    if (this.product_id) {\n      productData[\"id\"] = this.product_id;\n      this.apiService.dispatchPostRequest(\"/api/products/update\", {'product':productData}).then(\n        res => {\n          this.router.navigate(['products'])\n        },\n        msg => {\n          this.error = JSON.stringify(msg)\n        }\n      )\n      return;\n\n    } else {\n\n      this.apiService.dispatchPostRequest(\"/api/products/addNewProduct\", productData).then( \n        res => {\n          if (!res['error']) {\n            this.router.navigate(['products'])\n          } else {\n            this.error = JSON.stringify(res)\n          }\n      },\n        msg => {\n          this.error = JSON.stringify(msg)\n      })\n    }\n  }\n}","<h1 class=\"col-container\">Add New Product</h1>\n\n<br/>\n\n<form class=\"col-container\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form.value)\">\n\n  <div>\n    <label for=\"name\">\n      tr_ Full Name\n    </label>\n    <input id=\"name\" type=\"text\" [(ngModel)]=\"enteredName\" formControlName=\"name\">\n  </div>\n\n  <div>\n    <label for=\"properties\">\n      tr_ Properties\n    </label>\n    <input id=\"properties\" type=\"text\" [(ngModel)]=\"enteredProperties\" formControlName=\"properties\">\n  </div>\n\n  <p *ngIf=\"error\">{{error}}</p>\n  <button class=\"button\"  type=\"submit\" *ngIf=\"form.status=='VALID' && !product_id\">Add</button>\n  <button class=\"button\"  type=\"submit\" *ngIf=\"form.status=='VALID' && product_id\">Update</button>\n</form>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from './local-storage.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiRequestService {\n\n  constructor(private http: HttpClient,\n              private localStorageService: LocalStorageService) { }\n\n    dispatchPostRequest(path, data, requiresAuth = true) {\n\n    if (requiresAuth) {\n\n      const token = this.localStorageService.locallyStoredToken()\n\n      const headers = new HttpHeaders({\"bearer\": token});\n\n      return this.http.post(environment.api_endpoint + path, data, {headers}).toPromise();\n    } else {\n      return this.http.post(environment.api_endpoint + path, data).toPromise()\n    }\n  }\n\n  dispatchPostFormDataRequest(path, formData) {\n\n    const token = this.localStorageService.locallyStoredToken()\n\n    let headers = new HttpHeaders({\"bearer\": token});\n    headers.set('bearer', token)\n    headers.set('Content-Type', 'formData')\n\n    return this.http.post(environment.api_endpoint + path, formData, {headers}).toPromise();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterNewUserComponent } from './register-new-user/register-new-user.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserProfileComponent} from './user-profile/user-profile.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { ProductsComponent } from './products/products.component';\nimport { AddNewProductComponent } from './add-new-product/add-new-product.component';\nimport { FilesComponent } from './files/files.component';\n\n\nconst routes: Routes = [\n  { path: 'register', component: RegisterNewUserComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'users/:userId', component: UserProfileComponent},\n  { path: 'main-menu', component: MainMenuComponent},\n  { path: 'products', component: ProductsComponent},\n  { path: 'products/add-new-product', component: AddNewProductComponent},\n  { path: 'products/edit/:productId', component: AddNewProductComponent},\n  { path: 'files/add', component: FilesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from './../../environments/environment';\nimport { LocalStorageService } from '../local-storage.service';\n\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './app-top-bar.component.html',\n  styleUrls: ['./app-top-bar.component.css']\n})\nexport class AppTopBarComponent implements OnInit {\n  env = environment;\n\n  constructor(\n    private storage: LocalStorageService\n  ) { }\n\n  shouldShowMainMenuNavigation = false\n  ngOnInit(): void {\n    alert(this.storage.locallyStoredToken())\n    if (this.storage.locallyStoredToken()) {\n      this.shouldShowMainMenuNavigation = true\n    } else {\n      this.shouldShowMainMenuNavigation = false\n    }\n  }\n}\n","<a *ngIf=\"shouldShowMainMenuNavigation\" [routerLink]=\"['/main-menu']\">\n    <h1> منوی اصلی</h1>\n</a>\n\n<!--  <p style=\"color: black;\">{{env.api_endpoint}}</p> -->","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Neshagostar';\n}\n","<app-top-bar></app-top-bar>\n\n<div class=\"col-container\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppTopBarComponent } from './app-top-bar/app-top-bar.component';\nimport { RegisterNewUserComponent } from './register-new-user/register-new-user.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { ProductsComponent } from './products/products.component';\nimport { AddNewProductComponent } from './add-new-product/add-new-product.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { FilesComponent } from './files/files.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppTopBarComponent,\n    RegisterNewUserComponent,\n    LoginComponent,\n    UserProfileComponent,\n    MainMenuComponent,\n    ProductsComponent,\n    AddNewProductComponent,\n    FilesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatIconModule,\n    MatCardModule,\n    MatProgressBarModule,\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit  } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from '../local-storage.service';\nimport { LoginService } from '../login.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({  \n  selector: 'app-files',\n  templateUrl: './files.component.html',\n  styleUrls: ['./files.component.css']\n})  \nexport class FilesComponent implements OnInit {\n\n  fileData: File = null;\n  previewUrl:any = null;\n  fileUploadProgress: string = null;\n  uploadedFilePath: string = null;\n\n\n  constructor(\n    private http: HttpClient,\n    private localStorageService: LocalStorageService,\n    private loginServie: LoginService,\n    private route: ActivatedRoute) { }\n   \n  fileProgress(fileInput: any) {\n        this.fileData = fileInput.target.files[0];\n\n        if (this.fileData) {\n          this.showSubmitButton = true\n        }\n        this.preview();\n  }\n\n  foreign_key;\n  isPublic: string;\n\n  ngOnInit() {\n    if (!this.localStorageService.loggedInUserId) {\n      this.loginServie.onAuthError()\n    }\n\n      this.route.paramMap.subscribe(params => {\n        this.foreign_key = params.get('foreignKey');\n        this.isPublic = params.get('isPublic');\n      });\n  }\n   \n  preview() {\n      // Show preview \n      var mimeType = this.fileData.type;\n      if (mimeType.match(/image\\/*/) == null) {\n        return;\n      }\n   \n      var reader = new FileReader();      \n      reader.readAsDataURL(this.fileData); \n      reader.onload = (_event) => { \n        this.previewUrl = reader.result; \n      }\n  }\n\n  showSubmitButton = false;\n   \n  onSubmit() {\n    this.showSubmitButton = false;\n      const formData = new FormData();\n        formData.append('image', this.fileData, \"image\");\n        formData.append('extension', this.fileData.name.split('.').pop())\n        formData.append('filename', this.fileData.name)\n        formData.append('userId', this.localStorageService.loggedInUserId())\n        formData.append('foreignId', this.foreign_key)\n        formData.append('isPublic', this.isPublic)\n\n        const token = this.localStorageService.locallyStoredToken()\n\n        let headers = new HttpHeaders({\"bearer\": token});\n        headers.set('bearer', token)\n        headers.set('Content-Type', 'multipart/formData')\n\n        this.http.post(environment.api_endpoint + '/api/files/save', formData, { headers })\n          .subscribe(res => {\n            alert(\"File uploaded successfully! Now you can go back or upload more files for this item.\");\n            this.fileData = null;\n            this.previewUrl = null;\n            this.uploadedFilePath = null;\n          }, msg => {\n            alert(JSON.stringify(msg['error']['message']));\n            if (this.fileData) {\n              this.showSubmitButton = true;\n            }\n          })\n  }\n}","<!-- <div style=\"text-align:center; margin-top: 100px; \"> -->\n    <!-- <mat-card style=\"margin-top:10px; width: 50%;\">   -->\n    <!-- <mat-card-content>   -->\n        <!-- <ul>  \n            <li *ngFor=\"let file of files\">  \n                <mat-progress-bar [value]=\"file.progress\"></mat-progress-bar>  \n                <span id=\"file-label\">  \n                     {{file.name}} \n                </span>  \n            </li>  \n        </ul>   -->\n    <!-- </mat-card-content>   -->\n    <!-- </mat-card> -->\n    <!-- <mat-card-actions>   -->\n        <!-- <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\" />\n        <button mat-button color=\"warn\" (click)=\"onClick()\">  \n            <mat-icon>file_upload</mat-icon>  \n            Upload  \n        </button>   -->\n    <!-- </mat-card-actions>   -->\n    \n\n    \n<!-- </div> -->\n\n<!-- <div class=\"form-group\">\n    <label for=\"file\">Choose File</label>\n    <input type=\"file\"\n           id=\"file\"\n           (change)=\"handleFileInput($event.target.files)\">\n</div> -->\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3\">\n            <h3>Choose File</h3>            \n            <div class=\"form-group\">\n                <input type=\"file\" name=\"image\" (change)=\"fileProgress($event)\" />\n            </div>\n            <div *ngIf=\"fileUploadProgress\">\n                Upload progress: {{ fileUploadProgress }}\n            </div>\n            <div class=\"image-preview mb-3\" *ngIf=\"previewUrl\">\n                <img [src]=\"previewUrl\" height=\"300\" />                 \n            </div>\n \n            <div class=\"mb-3\" *ngIf=\"uploadedFilePath\">\n                {{uploadedFilePath}}\n            </div>\n             \n            <div class=\"form-group\" >\n                <button  *ngIf=\"showSubmitButton\" class=\"btn btn-primary\"  (click)=\"onSubmit()\">Submit</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport * as CryptoJS from '../../node_modules/crypto-js';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  kToken = \"kWeather\";\n  kUserId = \"kUserID\";\n\n  encryptSecretKey = \"thisisavery582havingeverythinginit\"\n\n  constructor(\n    ) { }\n\n  setTokenLocally(token) {\n    const encrypted = this.encryptData({kWeather: token})\n    localStorage.setItem(this.kToken, encrypted)\n  }\n\n  locallyStoredToken() {\n    const encrypted = localStorage.getItem(this.kToken)\n    return this.decryptData(encrypted)[\"kWeather\"]\n  }\n\n  resetLocalStorage() {\n    localStorage.setItem(this.kToken, null)\n    localStorage.setItem(this.kUserId, null)\n  }\n\n  setLoggedInUserId(userId) {\n    localStorage.setItem(this.kUserId, userId)\n  }\n\n  loggedInUserId() {\n    return localStorage.get(this.kUserId)\n  }\n\n  encryptData(data) {\n\n    try {\n      return CryptoJS.AES.encrypt(JSON.stringify(data), this.encryptSecretKey).toString();\n    } catch (e) {\n      alert(e)\n    }\n  }\n\n  decryptData(data) {\n\n    try {\n      const bytes = CryptoJS.AES.decrypt(data, this.encryptSecretKey);\n      if (bytes.toString()) {\n        return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n      }\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiRequestService } from './api-request.service';\nimport { LocalStorageService } from './local-storage.service';\nimport { Router } from \"@angular/router\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(\n    private apiService: ApiRequestService,\n    private cookie: LocalStorageService,\n    private router: Router\n    ) { }\n\n  loginObservable(user) {\n    return this.apiService.dispatchPostRequest(\"/login\", user, false)\n  }\n\n  logout() {\n    this.cookie.resetLocalStorage();\n    this.router.navigate(['login']);\n  }\n\n  // This is usually called when user is in a suituation where not suppoed \n  // to be seeing the page and initiates a process.\n  // upon this the user is alereted and immediately refered to the login page.\n  onAuthError() {\n    this.logout()\n    this.router.navigate(['login'])\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from './../../environments/environment';\nimport { LoginService } from '../login.service';\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { LocalStorageService } from '../local-storage.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm;\n\n  constructor(private loginService: LoginService,\n              private router: Router,\n              private formBuilder: FormBuilder,\n              private localStorageService: LocalStorageService\n              ) {\n                this.loginForm = this.formBuilder.group({\n                  email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),\n                  password: ['', Validators.required],\n                });\n               }\n  error;\n  registerForm;\n  environment = environment;\n\n  ngOnInit(): void {\n  }\n\n  onSuccessfulLogin(login_response) {\n    var api_token: String = login_response['api_token']\n    var user = login_response['user']\n    var user_id = user['id']\n\n    this.localStorageService.setTokenLocally(api_token);\n    this.localStorageService.setLoggedInUserId(user_id);\n\n    this.error = 'users/' + user_id\n\n    this.router.navigate(['users/' + user_id]);\n  }\n\n  onSubmit(customerData) {\n\n    this.loginService.loginObservable(customerData).then( \n      res => {\n      this.onSuccessfulLogin(res);\n    },\n    msg => {\n      this.error = JSON.stringify(msg)\n    }\n    )\n  }\n\n  onRegisterClick() {\n    this.router.navigate(['register'])\n  }\n}\n","<!-- <h1 class=\"col-container\">Login</h1> -->\n\n<br/>\n\n<form class=\"col-container\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\n\n\n  <div>\n    <label for=\"email\">\n      ایمیل\n    </label>\n    <input id=\"email\" type=\"username\" autocomplete=\"username\" formControlName=\"email\">\n  </div>\n\n  <div>\n    <label for=\"password\">\n      کلمه عبور\n    </label>\n    <input id=\"password\" type=\"password\" autocomplete=\"new-password\" formControlName=\"password\">\n  </div>\n\n  <p *ngIf=\"error\">{{error}}</p>\n  <button class=\"button\"  type=\"submit\" *ngIf=\"loginForm.status=='VALID'\">ورود</button>\n</form>\n<br><br><br><br>\n<br><br>\n<br><br><br><br>\n<div class=\"card card-small\" (click)=\"onRegisterClick()\" tabindex=\"0\">\n  <span>برای ثبت نام اینجا </span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { LoginService} from \"../login.service\";\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.css']\n})\nexport class MainMenuComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private loginService: LoginService\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  onProductsClick() {\n    this.router.navigate(['products'])\n  }\n\n  onLogoutClick() {\n    this.loginService.logout()\n  }\n}\n","<style>\n\n</style>\n\n<div class=\"card-container\">\n    <div class=\"card card-small\" (click)=\"onProductsClick()\" tabindex=\"0\">\n        <span>محصولات</span>\n    </div>\n    \n    <div class=\"card card-small\" (click)=\"onLogoutClick()\" tabindex=\"0\">\n        <span>خروج</span>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { ApiRequestService } from '../api-request.service';\n\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  products;\n  error;\n\n  constructor(\n    private router: Router,\n    private api: ApiRequestService\n  ) { }\n\n  ngOnInit(): void {\n    this.onRefreshClick()\n  }\n\n  onAllProducts(products) {\n\n    this.products = products;\n  }\n\n  listSortedPropertyKeyValues(product) {\n    var json = JSON.parse(product['properties']);\n    const keys = Object.keys(json).sort((one, two) => (one > two ? 1 : -1)); \n    var result: Array<[String, String]> = []\n    for (let key of keys) {\n      result.push([key,String(json[key])])\n    } \n    return result\n  }\n\n  onRefreshClick() {\n    this.api.dispatchPostRequest(\"/api/products\", {}).then(\n      res => {\n        this.onAllProducts(res['products']);\n      },\n      msg => {\n        this.error = JSON.stringify(msg)\n      })\n  }\n\n  isEditModeEnabled = false\n\n  onEditModeClick() {\n    this.isEditModeEnabled = !this.isEditModeEnabled\n  }\n\n  onEditProductClick(p) {\n    var id = p['id']\n    this.router.navigate(['products/edit/' + id])\n  }\n\n  onDeleteProductClick(product) {\n    var id = product['id']\n    if (confirm(\"Should delete \" + product['name'] + \" ?\")) {\n      this.api.dispatchPostRequest(\"/api/products/delete/\" + id, {}).then(\n        res => {\n          this.onRefreshClick()\n        },\n        msg => {\n          this.error = JSON.stringify(msg)\n        }\n      )\n    }\n  }\n  onAddProductImageClick(product) {\n    const foreigh_key = product.id\n    this.router.navigate(['files/add/', {foreignKey: product.id, isPublic: \"true\"}])\n  }\n\n  onAddNewProductClick() {\n    this.router.navigate(['products/add-new-product'])\n  }\n}\n","<style>\n\n</style>\n\n<div class=\"card-container\">\n    <p *ngIf=\"error\">{{error}}</p>\n\n    <div class=\"card card-small\" (click)=\"onAddNewProductClick()\" tabindex=\"0\">\n        <span>Add New Product</span>\n    </div>\n\n    <div class=\"card card-small\" (click)=\"onRefreshClick()\" tabindex=\"0\">\n        <span>Refresh List</span>\n    </div>\n\n    <div class=\"card card-small\" (click)=\"onEditModeClick()\" tabindex=\"0\">\n        <span *ngIf=\"isEditModeEnabled\">Disable Edit</span>\n        <span *ngIf=\"isEditModeEnabled == false\">Enable Edit</span>\n    </div>\n</div>\n\n<div class=\"table-responsive\">\n    <table class=\"table table-striped w-auto\">\n        <tbody>\n            <tr *ngFor=\"let p of products\">\n                <td *ngIf=\"isEditModeEnabled\">\n                    <mat-icon class=\"warning\"  (click)=\"onDeleteProductClick(p)\">delete</mat-icon>\n                </td>\n                <td *ngIf=\"isEditModeEnabled\">\n                    <mat-icon (click)=\"onEditProductClick(p)\">edit</mat-icon>\n                </td>\n                <td *ngIf=\"isEditModeEnabled\">\n                    <mat-icon (click)=\"onAddProductImageClick(p)\">image</mat-icon>\n                </td>\n                <td><strong>{{ p.name }}</strong></td>\n                <td *ngFor=\"let item of listSortedPropertyKeyValues(p)\"><small>{{ item[0] }}: </small><strong>{{ item[1] }}</strong></td>\n            </tr>\n        </tbody>\n    </table>\n</div>","\n\n\n\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ApiRequestService } from '../api-request.service';\nimport { LoginService} from '../login.service';\nimport { Router } from \"@angular/router\";\n\n\n\n@Component({\n  selector: 'app-register-new-user',\n  templateUrl: './register-new-user.component.html',\n  styleUrls: ['./register-new-user.component.css']\n})\nexport class RegisterNewUserComponent implements OnInit {\n  registerForm;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiRequestService,\n    private router: Router\n  ) {\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),\n      password: ['', Validators.required],\n      password_confirmation: ['', Validators.required]\n    });\n  }\n\n  isFormStatusValid() {\n    return this.registerForm.status == 'INVALID'\n  }\n\n  ngOnInit() {\n\n  }\n\n  // To convert json to string\n  // JSON.stringify(res)\n  error;\n  newUser;\n  onSubmit(customerData) {\n    // Process checkout data here\n    this.registerForm.reset();\n    this.apiService.dispatchPostRequest(\"/register\", customerData, false).then(res =>{\n      this.router.navigate(['login']);\n    }, msg => {\n      this.error = JSON.stringify(msg)\n    })\n  }\n}","<h1 class=\"col-container\">Register New User</h1>\n\n<br/>\n\n<form class=\"col-container\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit(registerForm.value)\">\n\n  <div>\n    <label for=\"name\">\n      tr_ Full Name\n    </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\n  </div>\n\n  <div>\n    <label for=\"email\">\n      tr_ Email\n    </label>\n    <input id=\"email\" type=\"username\" autocomplete=\"username\" formControlName=\"email\">\n  </div>\n\n  <div>\n    <label for=\"password\">\n      tr_ Password\n    </label>\n    <input id=\"password\" type=\"password\" autocomplete=\"new-password\" formControlName=\"password\">\n  </div>\n\n  <div>\n    <label for=\"confirm_password\">\n      tr_ Confirm Password\n    </label>\n    <input id=\"confirm_password\" type=\"password\" autocomplete=\"new-password\" formControlName=\"password_confirmation\">\n  </div>\n  <p *ngIf=\"error\">{{error}}</p>\n  <button class=\"button\"  type=\"submit\" *ngIf=\"registerForm.status=='VALID'\">Register</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiRequestService } from '../api-request.service';\n\n\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiRequestService\n    ) { }\n\n\n  user_id;\n  name;\n  email;\n\n  error;\n\n  onFetchingUserSuccess(user) {\n    this.name = user['name']\n    this.email = user['email']\n  }\n\n  ngOnInit(): void {\n\n    this.route.paramMap.subscribe(params => {\n      this.user_id = params.get('userId');\n        \n        this.apiService.dispatchPostRequest(\"/api/users/\" + this.user_id, {}).then(\n          res => {\n            this.onFetchingUserSuccess(res['user']);\n        },\n          msg => {\n            this.error = JSON.stringify(msg)\n            alert(JSON.stringify(msg['error']))\n          })\n      })\n  }\n}\n","<h1 class=\"col-container\">User Profile</h1>\n\n<br>\n<p>{{name}}</p>\n<p>{{email}}</p>\n<p>{{user_id}}</p>\n\n<p></p>\n<p></p>\n<p *ngif=\"error\">{{error}}</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_endpoint: 'http://localhost:8000',\n  debug: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}