{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-new-product/add-new-product.component.ts","./src/app/add-new-product/add-new-product.component.html","./src/app/api-request.service.ts","./src/app/app-routing.module.ts","./src/app/app-top-bar/app-top-bar.component.ts","./src/app/app-top-bar/app-top-bar.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/files/files.component.ts","./src/app/files/files.component.html","./src/app/local-storage.service.ts","./src/app/login.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main-menu/main-menu.component.ts","./src/app/main-menu/main-menu.component.html","./src/app/products/products.component.ts","./src/app/products/products.component.html","./src/app/register-new-user/register-new-user.component.ts","./src/app/register-new-user/register-new-user.component.html","./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, ValidationErrors, Validators, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { environment } from './../../environments/environment';\nimport { ApiRequestService } from '../api-request.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-add-new-product',\n  templateUrl: './add-new-product.component.html',\n  styleUrls: ['./add-new-product.component.css']\n})\n\nexport class AddNewProductComponent implements OnInit {\n\n  form;\n  environment = environment;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiRequestService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      properties: new FormControl('', [this.jsonValidator(), Validators.required])\n    });\n  }\n  enteredName;\n  enteredProperties;\n\n  jsonValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      try {\n        JSON.parse(control.value);\n        return null;\n      } catch (error) {\n        // control.setErrors(error);\n        return {'jsonValidator': {value: control.value}};\n      }\n    };\n  }\n\n  isFormStatusValid() {\n    return this.form.status == 'INVALID'\n  }\n\n  product_id;\n\n  onFetchingProductSuccess(product) {\n    this.enteredName = product['name']\n    this.enteredProperties = product['properties']\n  }\n\n  ngOnInit(): void {\n\n    this.route.paramMap.subscribe(params => {\n      this.product_id = params.get('productId');\n        \n        this.apiService.dispatchPostRequest(\"/api/products/\" + this.product_id, {}).then(\n          res => {\n            this.onFetchingProductSuccess(res['product']);\n        },\n          msg => {})\n    });\n  }\n\n  // To convert json to string\n  // JSON.stringify(res)\n  error;\n  newUser;\n\n  onSubmit(productData) {\n    // Process checkout data here\n    this.form.reset();\n\n    if (this.product_id) {\n      productData[\"id\"] = this.product_id;\n      this.apiService.dispatchPostRequest(\"/api/products/update\", {'product':productData}).then(\n        res => {\n          this.router.navigate(['products'])\n        },\n        msg => {\n          this.error = JSON.stringify(msg)\n        }\n      )\n      return;\n\n    } else {\n\n      this.apiService.dispatchPostRequest(\"/api/products/addNewProduct\", productData).then( \n        res => {\n          if (!res['error']) {\n            this.router.navigate(['products'])\n          } else {\n            this.error = JSON.stringify(res)\n          }\n      },\n        msg => {\n          this.error = JSON.stringify(msg)\n      })\n    }\n  }\n}","<h1 class=\"col-container\">Add New Product</h1>\n\n<br/>\n\n<form class=\"col-container\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form.value)\">\n\n  <div>\n    <label for=\"name\">\n      tr_ Full Name\n    </label>\n    <input id=\"name\" type=\"text\" [(ngModel)]=\"enteredName\" formControlName=\"name\">\n  </div>\n\n  <div>\n    <label for=\"properties\">\n      tr_ Properties\n    </label>\n    <input id=\"properties\" type=\"text\" [(ngModel)]=\"enteredProperties\" formControlName=\"properties\">\n  </div>\n\n  <p *ngIf=\"error\">{{error}}</p>\n  <button class=\"button\"  type=\"submit\" *ngIf=\"form.status=='VALID' && !product_id\">Add</button>\n  <button class=\"button\"  type=\"submit\" *ngIf=\"form.status=='VALID' && product_id\">Update</button>\n</form>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from './local-storage.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiRequestService {\n\n  constructor(private http: HttpClient,\n              private localStorageService: LocalStorageService) { }\n\n    dispatchPostRequest(path, data, requiresAuth = true) {\n\n    if (requiresAuth) {\n\n      const token = this.localStorageService.locallyStoredToken()\n\n      const headers = new HttpHeaders({\"bearer\": token});\n\n      return this.http.post(environment.api_endpoint + path, data, {headers}).toPromise();\n    } else {\n      return this.http.post(environment.api_endpoint + path, data).toPromise()\n    }\n  }\n\n  dispatchPostFormDataRequest(path, formData) {\n\n    const token = this.localStorageService.locallyStoredToken()\n\n    let headers = new HttpHeaders({\"bearer\": token});\n    headers.set('bearer', token)\n    headers.set('Content-Type', 'formData')\n\n    return this.http.post(environment.api_endpoint + path, formData, {headers}).toPromise();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterNewUserComponent } from './register-new-user/register-new-user.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserProfileComponent} from './user-profile/user-profile.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { ProductsComponent } from './products/products.component';\nimport { AddNewProductComponent } from './add-new-product/add-new-product.component';\nimport { FilesComponent } from './files/files.component';\n\n\nconst routes: Routes = [\n  { path: 'register', component: RegisterNewUserComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'users/:userId', component: UserProfileComponent},\n  { path: 'main-menu', component: MainMenuComponent},\n  { path: 'products', component: ProductsComponent},\n  { path: 'products/add-new-product', component: AddNewProductComponent},\n  { path: 'products/edit/:productId', component: AddNewProductComponent},\n  { path: 'files/add', component: FilesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from './../../environments/environment';\nimport { LocalStorageService } from '../local-storage.service';\n\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './app-top-bar.component.html',\n  styleUrls: ['./app-top-bar.component.css']\n})\nexport class AppTopBarComponent implements OnInit {\n  env = environment;\n\n  constructor(\n    private storage: LocalStorageService\n  ) { }\n\n  shouldShowMainMenuNavigation = false\n  ngOnInit(): void {\n    alert(this.storage.locallyStoredToken())\n    if (this.storage.locallyStoredToken()) {\n      this.shouldShowMainMenuNavigation = true\n    } else {\n      this.shouldShowMainMenuNavigation = false\n    }\n  }\n}\n","<a *ngIf=\"shouldShowMainMenuNavigation\" [routerLink]=\"['/main-menu']\">\n    <h1> منوی اصلی</h1>\n</a>\n\n<!--  <p style=\"color: black;\">{{env.api_endpoint}}</p> -->","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Neshagostar';\n}\n","<app-top-bar></app-top-bar>\n\n<div class=\"col-container\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppTopBarComponent } from './app-top-bar/app-top-bar.component';\nimport { RegisterNewUserComponent } from './register-new-user/register-new-user.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { ProductsComponent } from './products/products.component';\nimport { AddNewProductComponent } from './add-new-product/add-new-product.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { FilesComponent } from './files/files.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppTopBarComponent,\n    RegisterNewUserComponent,\n    LoginComponent,\n    UserProfileComponent,\n    MainMenuComponent,\n    ProductsComponent,\n    AddNewProductComponent,\n    FilesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatIconModule,\n    MatCardModule,\n    MatProgressBarModule,\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit  } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from '../local-storage.service';\nimport { LoginService } from '../login.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({  \n  selector: 'app-files',\n  templateUrl: './files.component.html',\n  styleUrls: ['./files.component.css']\n})  \nexport class FilesComponent implements OnInit {\n\n  fileData: File = null;\n  previewUrl:any = null;\n  fileUploadProgress: string = null;\n  uploadedFilePath: string = null;\n\n\n  constructor(\n    private http: HttpClient,\n    private localStorageService: LocalStorageService,\n    private loginServie: LoginService,\n    private route: ActivatedRoute) { }\n   \n  fileProgress(fileInput: any) {\n        this.fileData = fileInput.target.files[0];\n\n        if (this.fileData) {\n          this.showSubmitButton = true\n        }\n        this.preview();\n  }\n\n  foreign_key;\n  isPublic: string;\n\n  ngOnInit() {\n    if (!this.localStorageService.loggedInUserId) {\n      this.loginServie.onAuthError()\n    }\n\n      this.route.paramMap.subscribe(params => {\n        this.foreign_key = params.get('foreignKey');\n        this.isPublic = params.get('isPublic');\n      });\n  }\n   \n  preview() {\n      // Show preview \n      var mimeType = this.fileData.type;\n      if (mimeType.match(/image\\/*/) == null) {\n        return;\n      }\n   \n      var reader = new FileReader();      \n      reader.readAsDataURL(this.fileData); \n      reader.onload = (_event) => { \n        this.previewUrl = reader.result; \n      }\n  }\n\n  showSubmitButton = false;\n   \n  onSubmit() {\n    this.showSubmitButton = false;\n      const formData = new FormData();\n        formData.append('image', this.fileData, \"image\");\n        formData.append('extension', this.fileData.name.split('.').pop())\n        formData.append('filename', this.fileData.name)\n        formData.append('userId', this.localStorageService.loggedInUserId())\n        formData.append('foreignId', this.foreign_key)\n        formData.append('isPublic', this.isPublic)\n\n        const token = this.localStorageService.locallyStoredToken()\n\n        let headers = new HttpHeaders({\"bearer\": token});\n        headers.set('bearer', token)\n        headers.set('Content-Type', 'multipart/formData')\n\n        this.http.post(environment.api_endpoint + '/api/files/save', formData, { headers })\n          .subscribe(res => {\n            alert(\"File uploaded successfully! Now you can go back or upload more files for this item.\");\n            this.fileData = null;\n            this.previewUrl = null;\n            this.uploadedFilePath = null;\n          }, msg => {\n            alert(JSON.stringify(msg['error']['message']));\n            if (this.fileData) {\n              this.showSubmitButton = true;\n            }\n          })\n  }\n}","<!-- <div style=\"text-align:center; margin-top: 100px; \"> -->\n    <!-- <mat-card style=\"margin-top:10px; width: 50%;\">   -->\n    <!-- <mat-card-content>   -->\n        <!-- <ul>  \n            <li *ngFor=\"let file of files\">  \n                <mat-progress-bar [value]=\"file.progress\"></mat-progress-bar>  \n                <span id=\"file-label\">  \n                     {{file.name}} \n                </span>  \n            </li>  \n        </ul>   -->\n    <!-- </mat-card-content>   -->\n    <!-- </mat-card> -->\n    <!-- <mat-card-actions>   -->\n        <!-- <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\" />\n        <button mat-button color=\"warn\" (click)=\"onClick()\">  \n            <mat-icon>file_upload</mat-icon>  \n            Upload  \n        </button>   -->\n    <!-- </mat-card-actions>   -->\n    \n\n    \n<!-- </div> -->\n\n<!-- <div class=\"form-group\">\n    <label for=\"file\">Choose File</label>\n    <input type=\"file\"\n           id=\"file\"\n           (change)=\"handleFileInput($event.target.files)\">\n</div> -->\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3\">\n            <h3>Choose File</h3>            \n            <div class=\"form-group\">\n                <input type=\"file\" name=\"image\" (change)=\"fileProgress($event)\" />\n            </div>\n            <div *ngIf=\"fileUploadProgress\">\n                Upload progress: {{ fileUploadProgress }}\n            </div>\n            <div class=\"image-preview mb-3\" *ngIf=\"previewUrl\">\n                <img [src]=\"previewUrl\" height=\"300\" />                 \n            </div>\n \n            <div class=\"mb-3\" *ngIf=\"uploadedFilePath\">\n                {{uploadedFilePath}}\n            </div>\n             \n            <div class=\"form-group\" >\n                <button  *ngIf=\"showSubmitButton\" class=\"btn btn-primary\"  (click)=\"onSubmit()\">Submit</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport * as CryptoJS from '../../node_modules/crypto-js';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  kToken = \"kWeather\";\n  kUserId = \"kUserID\";\n\n  encryptSecretKey = \"thisisavery582havingeverythinginit\"\n\n  constructor(\n    ) { }\n\n  setTokenLocally(token) {\n    const encrypted = this.encryptData({kWeather: token})\n    localStorage.setItem(this.kToken, encrypted)\n  }\n\n  locallyStoredToken() {\n    const encrypted = localStorage.getItem(this.kToken)\n    return this.decryptData(encrypted)[\"kWeather\"]\n  }\n\n  resetLocalStorage() {\n    localStorage.setItem(this.kToken, null)\n    localStorage.setItem(this.kUserId, null)\n  }\n\n  setLoggedInUserId(userId) {\n    localStorage.setItem(this.kUserId, userId)\n  }\n\n  loggedInUserId() {\n    return localStorage.get(this.kUserId)\n  }\n\n  encryptData(data) {\n\n    try {\n      return CryptoJS.AES.encrypt(JSON.stringify(data), this.encryptSecretKey).toString();\n    } catch (e) {\n      alert(e)\n    }\n  }\n\n  decryptData(data) {\n\n    try {\n      const bytes = CryptoJS.AES.decrypt(data, this.encryptSecretKey);\n      if (bytes.toString()) {\n        return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n      }\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiRequestService } from './api-request.service';\nimport { LocalStorageService } from './local-storage.service';\nimport { Router } from \"@angular/router\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(\n    private apiService: ApiRequestService,\n    private cookie: LocalStorageService,\n    private router: Router\n    ) { }\n\n  loginObservable(user) {\n    return this.apiService.dispatchPostRequest(\"/login\", user, false)\n  }\n\n  logout() {\n    this.cookie.resetLocalStorage();\n    this.router.navigate(['login']);\n  }\n\n  // This is usually called when user is in a suituation where not suppoed \n  // to be seeing the page and initiates a process.\n  // upon this the user is alereted and immediately refered to the login page.\n  onAuthError() {\n    this.logout()\n    this.router.navigate(['login'])\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from './../../environments/environment';\nimport { LoginService } from '../login.service';\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { LocalStorageService } from '../local-storage.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm;\n\n  constructor(private loginService: LoginService,\n              private router: Router,\n              private formBuilder: FormBuilder,\n              private localStorageService: LocalStorageService\n              ) {\n                this.loginForm = this.formBuilder.group({\n                  email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),\n                  password: ['', Validators.required],\n                });\n               }\n  error;\n  registerForm;\n  environment = environment;\n\n  ngOnInit(): void {\n  }\n\n  onSuccessfulLogin(login_response) {\n    var api_token: String = login_response['api_token']\n    var user = login_response['user']\n    var user_id = user['id']\n\n    this.localStorageService.setTokenLocally(api_token);\n    this.localStorageService.setLoggedInUserId(user_id);\n\n    this.error = 'users/' + user_id\n\n    this.router.navigate(['users/' + user_id]);\n  }\n\n  onSubmit(customerData) {\n\n    this.loginService.loginObservable(customerData).then( \n      res => {\n      this.onSuccessfulLogin(res);\n    },\n    msg => {\n      this.error = JSON.stringify(msg)\n    }\n    )\n  }\n\n  onRegisterClick() {\n    this.router.navigate(['register'])\n  }\n}\n","<!-- <h1 class=\"col-container\">Login</h1> -->\n\n<br/>\n\n<form class=\"col-container\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\n\n\n  <div>\n    <label for=\"email\">\n      ایمیل\n    </label>\n    <input id=\"email\" type=\"username\" autocomplete=\"username\" formControlName=\"email\">\n  </div>\n\n  <div>\n    <label for=\"password\">\n      کلمه عبور\n    </label>\n    <input id=\"password\" type=\"password\" autocomplete=\"new-password\" formControlName=\"password\">\n  </div>\n\n  <p *ngIf=\"error\">{{error}}</p>\n  <button class=\"button\"  type=\"submit\" *ngIf=\"loginForm.status=='VALID'\">ورود</button>\n</form>\n<br><br><br><br>\n<br><br>\n<br><br><br><br>\n<div class=\"card card-small\" (click)=\"onRegisterClick()\" tabindex=\"0\">\n  <span>برای ثبت نام اینجا </span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { LoginService} from \"../login.service\";\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.css']\n})\nexport class MainMenuComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private loginService: LoginService\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  onProductsClick() {\n    this.router.navigate(['products'])\n  }\n\n  onLogoutClick() {\n    this.loginService.logout()\n  }\n}\n","<style>\n\n</style>\n\n<div class=\"card-container\">\n    <div class=\"card card-small\" (click)=\"onProductsClick()\" tabindex=\"0\">\n        <span>محصولات</span>\n    </div>\n    \n    <div class=\"card card-small\" (click)=\"onLogoutClick()\" tabindex=\"0\">\n        <span>خروج</span>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { ApiRequestService } from '../api-request.service';\n\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  products;\n  error;\n\n  constructor(\n    private router: Router,\n    private api: ApiRequestService\n  ) { }\n\n  ngOnInit(): void {\n    this.onRefreshClick()\n  }\n\n  onAllProducts(products) {\n\n    this.products = products;\n  }\n\n  listSortedPropertyKeyValues(product) {\n    var json = JSON.parse(product['properties']);\n    const keys = Object.keys(json).sort((one, two) => (one > two ? 1 : -1)); \n    var result: Array<[String, String]> = []\n    for (let key of keys) {\n      result.push([key,String(json[key])])\n    } \n    return result\n  }\n\n  onRefreshClick() {\n    this.api.dispatchPostRequest(\"/api/products\", {}).then(\n      res => {\n        this.onAllProducts(res['products']);\n      },\n      msg => {\n        this.error = JSON.stringify(msg)\n      })\n  }\n\n  isEditModeEnabled = false\n\n  onEditModeClick() {\n    this.isEditModeEnabled = !this.isEditModeEnabled\n  }\n\n  onEditProductClick(p) {\n    var id = p['id']\n    this.router.navigate(['products/edit/' + id])\n  }\n\n  onDeleteProductClick(product) {\n    var id = product['id']\n    if (confirm(\"Should delete \" + product['name'] + \" ?\")) {\n      this.api.dispatchPostRequest(\"/api/products/delete/\" + id, {}).then(\n        res => {\n          this.onRefreshClick()\n        },\n        msg => {\n          this.error = JSON.stringify(msg)\n        }\n      )\n    }\n  }\n  onAddProductImageClick(product) {\n    const foreigh_key = product.id\n    this.router.navigate(['files/add/', {foreignKey: product.id, isPublic: \"true\"}])\n  }\n\n  onAddNewProductClick() {\n    this.router.navigate(['products/add-new-product'])\n  }\n}\n","<style>\n\n</style>\n\n<div class=\"card-container\">\n    <p *ngIf=\"error\">{{error}}</p>\n\n    <div class=\"card card-small\" (click)=\"onAddNewProductClick()\" tabindex=\"0\">\n        <span>Add New Product</span>\n    </div>\n\n    <div class=\"card card-small\" (click)=\"onRefreshClick()\" tabindex=\"0\">\n        <span>Refresh List</span>\n    </div>\n\n    <div class=\"card card-small\" (click)=\"onEditModeClick()\" tabindex=\"0\">\n        <span *ngIf=\"isEditModeEnabled\">Disable Edit</span>\n        <span *ngIf=\"isEditModeEnabled == false\">Enable Edit</span>\n    </div>\n</div>\n\n<div class=\"table-responsive\">\n    <table class=\"table table-striped w-auto\">\n        <tbody>\n            <tr *ngFor=\"let p of products\">\n                <td *ngIf=\"isEditModeEnabled\">\n                    <mat-icon class=\"warning\"  (click)=\"onDeleteProductClick(p)\">delete</mat-icon>\n                </td>\n                <td *ngIf=\"isEditModeEnabled\">\n                    <mat-icon (click)=\"onEditProductClick(p)\">edit</mat-icon>\n                </td>\n                <td *ngIf=\"isEditModeEnabled\">\n                    <mat-icon (click)=\"onAddProductImageClick(p)\">image</mat-icon>\n                </td>\n                <td><strong>{{ p.name }}</strong></td>\n                <td *ngFor=\"let item of listSortedPropertyKeyValues(p)\"><small>{{ item[0] }}: </small><strong>{{ item[1] }}</strong></td>\n            </tr>\n        </tbody>\n    </table>\n</div>","\n\n\n\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ApiRequestService } from '../api-request.service';\nimport { LoginService} from '../login.service';\nimport { Router } from \"@angular/router\";\n\n\n\n@Component({\n  selector: 'app-register-new-user',\n  templateUrl: './register-new-user.component.html',\n  styleUrls: ['./register-new-user.component.css']\n})\nexport class RegisterNewUserComponent implements OnInit {\n  registerForm;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiRequestService,\n    private router: Router\n  ) {\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),\n      password: ['', Validators.required],\n      password_confirmation: ['', Validators.required]\n    });\n  }\n\n  isFormStatusValid() {\n    return this.registerForm.status == 'INVALID'\n  }\n\n  ngOnInit() {\n\n  }\n\n  // To convert json to string\n  // JSON.stringify(res)\n  error;\n  newUser;\n  onSubmit(customerData) {\n    // Process checkout data here\n    this.registerForm.reset();\n    this.apiService.dispatchPostRequest(\"/register\", customerData, false).then(res =>{\n      this.router.navigate(['login']);\n    }, msg => {\n      this.error = JSON.stringify(msg)\n    })\n  }\n}","<h1 class=\"col-container\">Register New User</h1>\n\n<br/>\n\n<form class=\"col-container\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit(registerForm.value)\">\n\n  <div>\n    <label for=\"name\">\n      tr_ Full Name\n    </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\n  </div>\n\n  <div>\n    <label for=\"email\">\n      tr_ Email\n    </label>\n    <input id=\"email\" type=\"username\" autocomplete=\"username\" formControlName=\"email\">\n  </div>\n\n  <div>\n    <label for=\"password\">\n      tr_ Password\n    </label>\n    <input id=\"password\" type=\"password\" autocomplete=\"new-password\" formControlName=\"password\">\n  </div>\n\n  <div>\n    <label for=\"confirm_password\">\n      tr_ Confirm Password\n    </label>\n    <input id=\"confirm_password\" type=\"password\" autocomplete=\"new-password\" formControlName=\"password_confirmation\">\n  </div>\n  <p *ngIf=\"error\">{{error}}</p>\n  <button class=\"button\"  type=\"submit\" *ngIf=\"registerForm.status=='VALID'\">Register</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiRequestService } from '../api-request.service';\n\n\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiRequestService\n    ) { }\n\n\n  user_id;\n  name;\n  email;\n\n  error;\n\n  onFetchingUserSuccess(user) {\n    this.name = user['name']\n    this.email = user['email']\n  }\n\n  ngOnInit(): void {\n\n    this.route.paramMap.subscribe(params => {\n      this.user_id = params.get('userId');\n        \n        this.apiService.dispatchPostRequest(\"/api/users/\" + this.user_id, {}).then(\n          res => {\n            this.onFetchingUserSuccess(res['user']);\n        },\n          msg => {\n            this.error = JSON.stringify(msg)\n            alert(JSON.stringify(msg['error']))\n          })\n      })\n  }\n}\n","<h1 class=\"col-container\">User Profile</h1>\n\n<br>\n<p>{{name}}</p>\n<p>{{email}}</p>\n<p>{{user_id}}</p>\n\n<p></p>\n<p></p>\n<p *ngif=\"error\">{{error}}</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_endpoint: 'http://localhost:8000',\n  debug: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}